<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>io.sealights.examples</groupId>
	<artifactId>sl-maven-examples-container</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>pom</packaging>
	<!-- <name>sl-maven-examples-container</name> -->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Dependencies versions -->
		<lombok.version>1.16.16</lombok.version>
        <logback.version>1.2.3</logback.version>
        <slf4j.version>1.7.25</slf4j.version>
		<testng.version>6.9.4</testng.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<powermock.version>1.7.1</powermock.version>
		
		<!-- Plugins versions -->
		<!-- <maven.compiler.source>1.7</maven.compiler.source> -->
		<!-- <maven.compiler.target>1.7</maven.compiler.target> -->
		<!-- <maven.jar.plugin.version>2.4</maven.jar.plugin.version> -->
		<maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version> 
		<!-- <maven.surefire.plugin.version>2.22.0</maven.surefire.plugin.version> -->
		<!-- <maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version> -->
		<!-- <argLine> </argLine> -->
		<!-- The development version  -->
		<sealights.plugin.version>2.1.0-SNAPSHOT</sealights.plugin.version>
		<!-- Recent version  -->
		<!-- <sealights.plugin.version>2.1.598</sealights.plugin.version> -->
		
		<!--  jacoco configuration -->
		<maven.jacoco.plugin.version>0.8.0</maven.jacoco.plugin.version>
		<jacoco.reportPath>${project.build.directory}/jacoco-ut.exec</jacoco.reportPath>
		<jacoco.reportPathIT>${project.build.directory}/jacoco-it.exec</jacoco.reportPathIT>
		
		<!-- debugging stuff -->
<!--         <sealights.skip>true</sealights.skip> -->
        <sldebugOn>-agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5005,suspend=y</sldebugOn>
        <sldebugOff> </sldebugOff>
        <sldebug>${sldebugOff}</sldebug>
        <!-- Set this for debugging of test listener-->
        <!-- <sldebug>${sldebugOn}</sldebug> -->
		<token.file.path>path/to/tokenfile</token.file.path>
		<test.listener.path>path/to/testlistener</test.listener.path>
		<buildscanner.path>path/to/buildscanner</buildscanner.path>
		<!-- Bartosz -->
<!--		<token.file.path>C:\dev\SeaLights\sl-agents-token.txt</token.file.path>-->
<!--		<test.listener.path>C:\Users\Bartosz Kaczkowski\IdeaProjects\SL.OnPremise.Agents.Java\java-agent-bootstrapper\target\java-agent-bootstrapper-2.0.0-SNAPSHOT.jar</test.listener.path>-->
<!--		<buildscanner.path>C:\Users\Bartosz Kaczkowski\IdeaProjects\SL.OnPremise.Agents.Java\java-build-agent\target\java-build-agent-2.0.0-SNAPSHOT.jar</buildscanner.path>-->
		<!-- Ala -->
<!--		<tokenfile.path>C:\SL\ENV\tokens\sl-agents-token.txt</tokenfile.path>-->
<!--		<testlistener.path>C:\Users\ala schneider\Dev\SL.OnPremise.Agents.Java\java-agent-bootstrapper\target\java-agent-bootstrapper-2.0.0-SNAPSHOT.jar</testlistener.path>-->
<!--		<buildscanner.path>C:\Users\ala schneider\Dev\SL.OnPremise.Agents.Java\java-build-agent\target\java-build-agent-2.0.0-SNAPSHOT.jar</buildscanner.path>-->
	</properties>

	<modules>
		<module>sl-example-junit-only</module>
		<module>sl-example-java8</module>
    	<module>sl-example-junit-testng</module>
    	<module>sl-example-junit5</module>
  		<module>sl-example-testng-only</module>
		<module>sl-example-jmockit</module>
		<module>sl-example-soapui</module>
		<module>sl-example-cucumber</module>
		<!-- <module>sl-example-junit4-testng-failures</module> -->
		<!-- <module>sl-example-springboot-war</module> -->
		<!-- <module>sl-example-junit5-failures</module> -->
		<!-- <module>sl-example-surefire-outofmemory</module> -->
		<!-- <module>sl-example-dynamic-class-load</module> -->
		<!-- <module>sl-junit5-examples</module> -->
  </modules>
	
	<dependencies>
		<!--  Logback Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
              <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

	</dependencies>
	
	<scm>
		<connection>scm:git:https://github.com/alasch2/SL.Java.Examples.git</connection>
		<url>https://github.com/alasch2/SL.Java.Examples</url>
<!-- 		<tag>v1.0.0</tag> -->
	</scm>

	<build>
			
		<pluginManagement>
			<plugins>

		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-surefire-plugin</artifactId>
		            <version>${maven.surefire.plugin.version}</version>
		            <configuration>
	            		<!-- <argLine>-Xmx1024m @{argLine}</argLine> -->
						<!-- <forkedProcessTimeoutInSeconds>120</forkedProcessTimeoutInSeconds> -->
						<!-- <shutdown>exit</shutdown> -->
		            </configuration>
	            </plugin>
	            
				<plugin>
					<groupId>io.sealights.on-premise.agents.plugin</groupId>
					<artifactId>sealights-maven-plugin</artifactId>
					<version>${sealights.plugin.version}</version>
					<configuration>
						<includeResources>true</includeResources>
						<!--Path to valid token should be set-->
						<!--<tokenFile>path/to/token</tokenFile>-->
						<!--tokenFile>${token.file.path}</tokenFile-->
						<tokenFile>${tokenfile.path}</tokenFile>
						<build>${sl.build}</build>
						<branch>master</branch>
						<createBuildSessionId>true</createBuildSessionId>
						<!-- <moduleName>${project.name}</moduleName> -->
						<workspacepath>${project.build.outputDirectory}</workspacepath>
						<filesincluded>*.class</filesincluded>
						<filesStorage>/tmp</filesStorage>
						<packagesincluded>io.sl.ex.*</packagesincluded>
						<filesexcluded>*test-classes*</filesexcluded>
						<logEnabled>true</logEnabled>
 						<!-- <logLevel>off</logLevel> -->
						<logToConsole>true</logToConsole>
						<!-- <logToFile>true</logToFile> -->
						<testStage>Unit Tests</testStage>
						<!-- <buildScannerIgnoreLogEnabled>true</buildScannerIgnoreLogEnabled>  -->
 						<!-- <testListenerIgnoreLogEnabled>true</testListenerIgnoreLogEnabled> -->
						<!-- <enableUpgrade>true</enableUpgrade> -->
						<!-- This is for fiddler -->
						<!-- <proxy>127.0.0.1:8888</proxy> -->
						<!-- <proxy>alash:ezPass123@54.246.150.1:5476</proxy> -->
						<!-- <server>http://54.154.181.128:8080/api</server>  -->
						<sendContributors>true</sendContributors>
 						<testListenerJar>${testlistener.path}</testListenerJar>
						<buildScannerJar>${buildscanner.path}</buildScannerJar>
  						<sealightsJvmParams>
							<!-- <sl.scm.baseUrl>https://github.com/alasch2/MavenExample/</sl.scm.baseUrl> -->
							<!-- <sl.scm>none</sl.scm> -->
							<!-- <sl.scm.provider>github</sl.scm.provider> -->
							<!-- <sl.scm.version>4.6</sl.scm.version> -->
							<!--<sl.featuresData.enableLineCoverage>true</sl.featuresData.enableLineCoverage>-->
 							<sl.featuresData.ignoreAutoGeneratedMethods>true</sl.featuresData.ignoreAutoGeneratedMethods>
 							<!--<sl.featuresData.reportOnConstructors>false</sl.featuresData.reportOnConstructors>-->
							<!--<sl.featuresData.reportOnGettersAndSetters>false</sl.featuresData.reportOnGettersAndSetters>-->
							<!-- <sl.featuresData.sendPartialFootprints>false</sl.featuresData.sendPartialFootprints> -->
							<sl.tia.disabled>false</sl.tia.disabled>
							<sl.tia.pollingTimeoutSec>3</sl.tia.pollingTimeoutSec>
 							<!-- <sl.ignoreCertificateErrors>true</sl.ignoreCertificateErrors> -->
							<sl.httpMaxAttempts>1</sl.httpMaxAttempts>
							<!-- <metadata> -->
							<!-- 	<jobName>${JOB_NAME}</jobName> -->
							<!-- 	<logsUrl>${BUILD_URL}/console</logsUrl> -->
							<!-- </metadata> -->
						</sealightsJvmParams>
						<!-- <classLoadersExcluded>no</classLoadersExcluded> -->
						<classLoadersExcluded>*MockClassLoader*</classLoadersExcluded>
					</configuration>
					<executions>
						<execution>
							<id>a1</id>
							<goals>
								<goal>build-scanner</goal>
							</goals>
						</execution>
						<execution>
							<id>a2</id>
							<goals>
								<goal>test-listener</goal>
							</goals>
						</execution>
						<execution>
							<id>a3</id>
							<goals>
								<goal>prepare-test-listener</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
		<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
			        <plugin>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-surefire-plugin</artifactId>
			            </plugin>
					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<!-- Plugin is not executed -->
						<executions>
							<execution>
								<id>a1</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>a2</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>a3</id>
								<phase>none</phase>
							</execution>
						</executions>						
					</plugin>
					
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>sl</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<!-- used the default configuration -->
					</plugin>
					
			        <plugin>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-surefire-plugin</artifactId>
			        </plugin>
			        
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sl-test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<configuration>
						<!-- used the default configuration -->
							<buildSessionId>${sl.bsid}</buildSessionId>
							<createBuildSessionId>false</createBuildSessionId>
							<runTestOnly>true</runTestOnly>
							<sealightsJvmParams>
								<sl.tia.disabled>false</sl.tia.disabled>
							</sealightsJvmParams>
						</configuration>
					</plugin>
					
			        <plugin>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-surefire-plugin</artifactId>
			            <configuration>
			            	<argLine>${sldebug} @{argLine}</argLine>
			            </configuration>
			        </plugin>
			        
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sl-all</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<!-- using different application name and packages -->
						<configuration>
							<appName>SL-Maven-AllExamples</appName>
							<!-- <appName>AllMavenExamples-Linux</appName> -->
						</configuration>
					</plugin>
					
			        <plugin>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-surefire-plugin</artifactId>
			            <configuration>
			            	<argLine>@{argLine}</argLine>
			            </configuration>
			        </plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Jacoco -->			
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven.jacoco.plugin.version}</version>
						<executions>
							<!-- prepare agent for measuring unit tests -->
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${jacoco.reportPath}</destFile>
								</configuration>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${jacoco.reportPath}</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
								</configuration>
							</execution>
							
							<!-- prepare agent for measuring IT tests -->
							<!--<execution>-->
								<!--<id>pre-integration-test</id>-->
								<!--<phase>pre-integration-test</phase>-->
								<!--<goals>-->
									<!--<goal>prepare-agent</goal>-->
								<!--</goals>-->
								<!--<configuration>-->
									<!--<destFile>${jacoco.reportPathIT}</destFile>-->
								<!--</configuration>-->
							<!--</execution>-->
							<!--<execution>-->
								<!--<id>post-integration-test</id>-->
								<!--<phase>post-integration-test</phase>-->
								<!--<goals>-->
									<!--<goal>report</goal>-->
								<!--</goals>-->
								<!--<configuration>-->
									<!--<dataFile>${jacoco.reportPathIT}</dataFile>-->
									<!--<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>-->
								<!--</configuration>-->
							<!--</execution>-->
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</pluginRepository>	
	</pluginRepositories>

</project>