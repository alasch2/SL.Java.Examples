<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>io.sealights.examples</groupId>
	<artifactId>sl-maven-examples-container</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>pom</packaging>
	<!-- <name>sl-maven-examples-container</name> -->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Dependencies versions -->
		<lombok.version>1.16.16</lombok.version>
        <logback.version>1.2.3</logback.version>
        <slf4j.version>1.7.25</slf4j.version>
		<testng.version>6.9.4</testng.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<powermock.version>1.7.1</powermock.version>
		<!-- Plugins versions -->
		<!-- <maven.compiler.source>1.7</maven.compiler.source> -->
		<!-- <maven.compiler.target>1.7</maven.compiler.target> -->
		<!-- <maven.jar.plugin.version>2.4</maven.jar.plugin.version> -->
		<maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
<!--		<maven.surefire.plugin.version>2.12.4</maven.surefire.plugin.version>-->
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
<!--		 <maven.surefire.plugin.version>2.22.0</maven.surefire.plugin.version>-->
<!-- 		 <maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version>-->
<!--		<sealightsArgLine> </sealightsArgLine>-->
		<!-- The development version  -->
<!--		<sealights.plugin.version>3.0.0-SNAPSHOT</sealights.plugin.version>-->
		<!-- Recent version  -->
				  <sealights.plugin.version>2.1.742</sealights.plugin.version>
<!--		  <sealights.plugin.version>3.0.771</sealights.plugin.version>-->
		
		<!--  jacoco configuration -->
		<maven.jacoco.plugin.version>0.8.0</maven.jacoco.plugin.version>
		<jacoco.reportPath>${project.build.directory}/jacoco-ut.exec</jacoco.reportPath>
		<jacoco.reportPathIT>${project.build.directory}/jacoco-it.exec</jacoco.reportPathIT>

		<!--  <sealights.skip>true</sealights.skip> -->

		<!-- debugging stuff -->
        <sldebugOn>-agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5005,suspend=y</sldebugOn>
        <sldebugOff> </sldebugOff>
        <sldebug>${sldebugOff}</sldebug>
        <!-- Uncomment this for debugging of test listener-->
		<!-- The property for debugging may be also defined in a sub-project-->
<!--		 <sldebug>${sldebugOn}</sldebug>-->

		<!-- The properties location should be redefined in each sub-project to value ${project.parent.basedir}-->
		<dev.properties.path>${project.basedir}</dev.properties.path>
	</properties>

	<modules>
		<module>sl-example-junit-only</module>
		<module>sl-example-java8</module>
    	<module>sl-example-junit-testng</module>
    	<module>sl-example-junit5</module>
  		<module>sl-example-testng-only</module>
		<module>sl-example-jmockit</module>
		<module>sl-example-soapui</module>
		<module>sl-example-cucumber</module>
        <module>sl-example-spring-cloud-contract</module>
	    <module>sl-stub-agent</module>
		<module>sl-example-spring-calculator</module>
		<module>sl-example-generate-class</module>
	</modules>
	
	<dependencies>
		<!--  Logback Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
              <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

	</dependencies>
	
	<scm>
		<connection>scm:git:https://github.com/alasch2/SL.Java.Examples.git</connection>
		<url>https://github.com/alasch2/SL.Java.Examples</url>
<!-- 		<tag>v1.0.0</tag> -->
	</scm>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Serves for reading of properties from dev.properties file.
				 The properties define location on a particular dev environment of:
				 token file, build-scanner and test-listener jars and are used by
				 sealights-maven-plugin
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0.0</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>${dev.properties.path}/dev.properties</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
					
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-surefire-plugin</artifactId>
		            <version>${maven.surefire.plugin.version}</version>
		            <configuration>
<!--	            		<argLine>-Xmx1024m @{sealightsArgLine}</argLine>-->
						<reuseForks>true</reuseForks>
						<!-- <forkedProcessTimeoutInSeconds>120</forkedProcessTimeoutInSeconds> -->
						<!-- <shutdown>exit</shutdown> -->
		            </configuration>
	            </plugin>

				<plugin>
					<groupId>io.sealights.on-premise.agents.plugin</groupId>
					<artifactId>sealights-maven-plugin</artifactId>
					<version>${sealights.plugin.version}</version>
					<configuration>
						<includeResources>true</includeResources>
						<tokenFile>${tokenfile.path}</tokenFile>
<!--						<buildSessionIdFile>buildSessionId.txt</buildSessionIdFile>-->
						<build>${sl.build}</build>
						<branch>master</branch>
						<createBuildSessionId>true</createBuildSessionId>
						<!-- <moduleName>${project.name}</moduleName> -->
						<workspacepath>${project.build.outputDirectory}</workspacepath>
						<filesincluded>*.class</filesincluded>
						<packagesincluded>io.sl.ex.*</packagesincluded>
						<filesexcluded>*test-classes*</filesexcluded>
 						<logLevel>debug</logLevel>
						<logToConsole>true</logToConsole>
						 <logToFile>true</logToFile>
						<testStage>Unit Tests</testStage>
<!--						<buildScannerIgnoreLogEnabled>true</buildScannerIgnoreLogEnabled>-->
						<testListenerIgnoreLogEnabled>true</testListenerIgnoreLogEnabled>
						<!-- <filesStorage>/tmp</filesStorage>-->
						<!-- This is for fiddler -->
<!--						<proxy>http://squid-proxy.dev.sealights.co:5476</proxy>-->
<!--						 <proxy>127.0.0.1:8888</proxy>-->
						<!-- <proxy>alash:ezPass123@54.246.150.1:5476</proxy> -->
						<!-- <server>http://54.154.181.128:8080/api</server>  -->
						<sendContributors>true</sendContributors>
 						<testListenerJar>${testlistener.path}</testListenerJar>
						<buildScannerJar>${buildscanner.path}</buildScannerJar>
<!--						<enableNoneZeroErrorCode>true</enableNoneZeroErrorCode>-->
  						<sealightsJvmParams>
							<enableUpgrade>true</enableUpgrade>
							<!-- <sl.scm.baseUrl>https://github.com/alasch2/MavenExample/</sl.scm.baseUrl> -->
							<!-- <sl.scm>none</sl.scm> -->
							<!-- <sl.scm.provider>github</sl.scm.provider> -->
							<!-- <sl.scm.version>4.6</sl.scm.version> -->
							<!--<sl.featuresData.enableLineCoverage>true</sl.featuresData.enableLineCoverage>-->
 							<sl.featuresData.ignoreAutoGeneratedMethods>true</sl.featuresData.ignoreAutoGeneratedMethods>
 							<!--<sl.featuresData.reportOnConstructors>false</sl.featuresData.reportOnConstructors>-->
							<!--<sl.featuresData.reportOnGettersAndSetters>false</sl.featuresData.reportOnGettersAndSetters>-->
							<sl.tia.disabled>false</sl.tia.disabled>
<!--							<sl.tia.pollingTimeoutSec>3</sl.tia.pollingTimeoutSec>-->
<!-- 							<sl.ignoreCertificateErrors>true</sl.ignoreCertificateErrors>-->
							<sl.httpMaxAttempts>1</sl.httpMaxAttempts>
							<sl.agentEventsMaxAttempts>1</sl.agentEventsMaxAttempts>
<!--							<sl.connectionTimeoutMS>2000</sl.connectionTimeoutMS>-->
							<sl.readTimeoutMS>20</sl.readTimeoutMS>
<!--							<sl.modulesToSkip>sl-example-junit-only</sl.modulesToSkip>-->
							<!-- <metadata> -->
							<!-- 	<jobName>${JOB_NAME}</jobName> -->
							<!-- 	<logsUrl>${BUILD_URL}/console</logsUrl> -->
							<!-- </metadata> -->
							<sl.footprintsEnableV6>true</sl.footprintsEnableV6>
<!--							<sl.fileDownloadTimeoutSec>6</sl.fileDownloadTimeoutSec>-->
						</sealightsJvmParams>
						<!-- <classLoadersExcluded>no</classLoadersExcluded> -->
						<classLoadersExcluded>*MockClassLoader*</classLoadersExcluded>
					</configuration>
					<executions>
						<execution>
							<id>a1</id>
							<goals>
								<goal>build-scanner</goal>
							</goals>
						</execution>
						<execution>
							<id>a2</id>
							<goals>
								<goal>test-listener</goal>
							</goals>
						</execution>
						<execution>
							<id>a3</id>
							<phase>initialize</phase>
							<goals>
								<goal>prepare-test-listener</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>

	</build>
	
	<profiles>
		<profile>
		<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
<!--			        <plugin>-->
<!--			            <groupId>org.apache.maven.plugins</groupId>-->
<!--			            <artifactId>maven-surefire-plugin</artifactId>-->
<!--					</plugin>-->
					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<!-- Plugin is not executed -->
						<executions>
							<execution>
								<id>a1</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>a2</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>a3</id>
								<phase>none</phase>
							</execution>
						</executions>						
					</plugin>
					
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>sl</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- The properties-maven-plugin should be defined in pom before
					the sealights-maven-plugin, since properties should be initialized from
					the external dev.properies file before sealights-maven-plugin
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<!-- used the default configuration -->
					</plugin>
					
			        <plugin>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${sldebug} @{sealightsArgLine}</argLine>
						</configuration>
					</plugin>
					
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sl-test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- The properties-maven-plugin should be defined in pom before
					the sealights-maven-plugin, since properties should be initialized from
					the external dev.properies file before sealights-maven-plugin
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<configuration>
						<!-- used the default configuration -->
							<buildSessionId>${sl.bsid}</buildSessionId>
							<createBuildSessionId>false</createBuildSessionId>
							<runTestOnly>true</runTestOnly>
							<sealightsJvmParams>
								<sl.tia.disabled>false</sl.tia.disabled>
							</sealightsJvmParams>
						</configuration>
					</plugin>
					
<!--			        <plugin>-->
<!--			            <groupId>org.apache.maven.plugins</groupId>-->
<!--			            <artifactId>maven-surefire-plugin</artifactId>-->
<!--			            <configuration>-->
<!--			            	<argLine>${sldebug} @{sealightsArgLine}</argLine>-->
<!--			            </configuration>-->
<!--			        </plugin>-->

				</plugins>
			</build>
		</profile>
		<profile>
			<id>sl-all</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- The properties-maven-plugin should be defined in pom before
					the sealights-maven-plugin, since properties should be initialized from
					the external dev.properies file before sealights-maven-plugin
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>io.sealights.on-premise.agents.plugin</groupId>
						<artifactId>sealights-maven-plugin</artifactId>
						<!-- using different application name and packages -->
						<configuration>
							<appName>SL-Maven-AllExamples</appName>
						</configuration>
					</plugin>
					
<!--			        <plugin>-->
<!--			            <groupId>org.apache.maven.plugins</groupId>-->
<!--			            <artifactId>maven-surefire-plugin</artifactId>-->
<!--			            <configuration>-->
<!--			            	<argLine>@{sealightsArgLine}</argLine>-->
<!--			            </configuration>-->
<!--			        </plugin>-->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Jacoco -->			
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven.jacoco.plugin.version}</version>
						<executions>
							<!-- prepare agent for measuring unit tests -->
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${jacoco.reportPath}</destFile>
								</configuration>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${jacoco.reportPath}</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
								</configuration>
							</execution>
							
							<!-- prepare agent for measuring IT tests -->
							<!--<execution>-->
								<!--<id>pre-integration-test</id>-->
								<!--<phase>pre-integration-test</phase>-->
								<!--<goals>-->
									<!--<goal>prepare-agent</goal>-->
								<!--</goals>-->
								<!--<configuration>-->
									<!--<destFile>${jacoco.reportPathIT}</destFile>-->
								<!--</configuration>-->
							<!--</execution>-->
							<!--<execution>-->
								<!--<id>post-integration-test</id>-->
								<!--<phase>post-integration-test</phase>-->
								<!--<goals>-->
									<!--<goal>report</goal>-->
								<!--</goals>-->
								<!--<configuration>-->
									<!--<dataFile>${jacoco.reportPathIT}</dataFile>-->
									<!--<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>-->
								<!--</configuration>-->
							<!--</execution>-->
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</pluginRepository>	
	</pluginRepositories>

</project>