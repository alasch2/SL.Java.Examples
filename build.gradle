apply from: 'general-settings.gradle'
apply from: 'versions.gradle'

subprojects {
    if (it.name != 'sl-example_junit5') {
        apply from: '../general-settings.gradle'
        apply from: '../jacoco-cfg.gradle'
    }
}

ext {
    apply_sealights_in_subproject=false
}

if (project.hasProperty('sl')) {
    if (project.hasProperty('all')) {
        project.apply_sealights_in_subproject = false
    }
    else {
        project.apply_sealights_in_subproject = true
    }
    println "'sl' provided; apply_sealights_in_subproject = $apply_sealights_in_subproject"
}

dependencies {
    testCompile "junit:junit:${versions.junit}"
    testCompile "org.testng:testng:${versions.testng}"
    compile "ch.qos.logback:logback-classic:${versions.logback}"
    compile "ch.qos.logback:logback-core:${versions.logback}"
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    compile "org.projectlombok:lombok:${versions.lombok}"
    compile "com.google.guava:guava:21.0"
    compile "commons-httpclient:commons-httpclient:3.1"   
}

/***************************************************************************************
 SEALIGHTS
 ***************************************************************************************/

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            credentials {
                username "devops"
                password "s2015l"
            }
            url "http://nex.sealights.co:8081/repository/sealights-internal"
        }
    }
    dependencies {
//        classpath 'io.sealights.on-premise.agents.plugin:sealights-gradle-plugin:3.0.0'
        classpath 'io.sealights.on-premise.agents.plugin:sealights-gradle-plugin:3.0.568'
        // classpath 'io.sealights.on-premise.agents.plugin:sealights-gradle-plugin:latest.release'
    }
}

/**
 * This is executed for any build when the 'sl' option is provided
 */
//subprojects {
allprojects {
//projects { - with this value plugin is not applied to subprojects 
    if (project.hasProperty('sl')) {
        apply plugin: 'io.sealights.on-premise.agents.plugin.sealights-gradle-plugin'

        sealights {
            includeResources = false
            tokenFile = "C:/SL/ENV/tokens/sl-alasch-token.txt"
            // tokenFile = "C:/SL/ENV/tokens/sltoken-dev-hash.txt"
            // workspacepath=System.getProperty('ws')
            //buildSessionIdFile = "buildSessionId.txt"
            // logEnabled = false
            logLevel = "debug"
            logToFile = false
            logToConsole = true
            // appName and packagesIncluded are overwritten by subprojects
            // when property -all' is NOT provided
            appName = "AllGradleJavaExamples"
            packagesIncluded = "io.sl.ex.*"
            branch = "master"
            build = System.getProperty('sl.build')
            buildSessionId = "test-provided-bsid-" + build
            createBuildSessionId = true
            // filesExcluded = "*Test"
            //buildScannerIgnoreLogEnabled=true
            // testListenerIgnoreLogEnabled=true
            // testStage = "ut1"
//            testTasks=["test"]

//            testListenerJar = $testlistenerPath
//            buildScannerJar = $buildscannerPath
            testListenerJar = "C:/Users/AlaSchneider/Dev/SL.OnPremise.Agents.Java/java-agent-bootstrapper/target/java-agent-bootstrapper-3.0.0-SNAPSHOT.jar"
            buildScannerJar = "C:/Users/AlaSchneider/Dev/SL.OnPremise.Agents.Java/java-build-agent/target/java-build-agent-3.0.0-SNAPSHOT.jar"
            // buildScannerJar ="C:/Users/ala schneider/Dev/Playground/sl-build-scanner-2.0.977.jar"
            // sealightsJvmParams=["sl.ignoreCertificateErrors":true, "sl.useApacheClient":"true"]
            sealightsJvmParams=[
                    "sl.httpMaxAttempts":1,
                    "sl.tia.enable":true,
//                    "sl.featuresData.reportOnConstructors":false,
//                    "sl.featuresData.reportOnGettersAndSetters":false,
                   "sl.featuresData.ignoreAutoGeneratedMethods":true
//                    "sl.featuresData.enableLineCoverage":true
            ]

            // The test tasks names for applying the test listener
            // If not provided, the default tasks are assigned like in commented value
            // testTasks=["test":"Unit Tests", "junitPlatformTest":"Unit Tests", "integrationTest":"Integration Tests"]
            // runTestOnly = true

            // node-js build-session id for test of runFunctionalTests
            // buildSessionId = "9548c71d-6109-4a07-a2c7-49ecb2655758"
            // runFunctionalTests=true
        }

        println "Assigned the default appName = $sealights.appName"

//        if (!project.hasProperty('all')) {
//            project.afterEvaluate {
//                subprojects {
//                    it.sealights.appName = ext.appName
//                    it.sealights.packagesIncluded = ext.packagesIncluded
//                }
//            }
//        }

        test {
            sealights {
//                testStage = "Some Tests Stage"
            }
        }

    }
}
